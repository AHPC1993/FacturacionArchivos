/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modelo.Clientes;
import modelo.Factura;
import modelo.GestionA;
import modelo.Productos;

/**
 *
 * @author
 */
public class FacturarPrincipal extends javax.swing.JFrame {

    //Contiene todos los datos a validar
    ArrayList<Object> datos;
    //Objetos clientes, productos, factura y gestión de archivos
    modelo.Clientes clientes;
    modelo.Productos productos;
    modelo.Factura factura;
    modelo.GestionA gestionarArchivos;
    //Modelos de lista utilizados para actualizar cleintes, productos y ventas.
    DefaultListModel modeloClientes;
    DefaultListModel modeloProductos;
    DefaultListModel modeloHistorialVentas;

    /**
     * Creates new form FacturarPrincipal
     */
    public FacturarPrincipal() {
        initComponents();
        //Se inicializan todos los modelos y los objetos.
        modeloClientes = new DefaultListModel<>();
        modeloProductos = new DefaultListModel<>();
        modeloHistorialVentas = new DefaultListModel<>();
        gestionarArchivos = new GestionA();
        //Se asignan a las listas los modelos que les corresponden, además,
        //se cargan los archivos .txt en cada lista.
        lstClientesVentas.setModel(modeloClientes);
        lstClientes.setModel(modeloClientes);
        lstClientes.setModel(gestionarArchivos.lista("Archivos/clientes.txt"));
        lstProductos.setModel(gestionarArchivos.lista("Archivos/productos.txt"));
        lstHistorialVentas.setModel(gestionarArchivos.lista("Archivos/facturas.txt"));
        lstClientesVentas.setModel(gestionarArchivos.lista("Archivos/clientes.txt"));
        lstProductosVentas.setModel(gestionarArchivos.lista("Archivos/productos.txt"));
        modeloClientes = (DefaultListModel) lstClientes.getModel();
        modeloProductos = (DefaultListModel) lstProductos.getModel();
        modeloHistorialVentas = (DefaultListModel) lstHistorialVentas.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnReportes = new javax.swing.JTabbedPane();
        pnlClientesTab = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtApellidosCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCedulaCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTelefonoCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnEliminarCliente = new javax.swing.JButton();
        btnAgregarCliente = new javax.swing.JButton();
        btnModificarCliente = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstClientes = new javax.swing.JList<>();
        pnlProductosTab = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnEliminarProductos = new javax.swing.JButton();
        btnAgregarProductos = new javax.swing.JButton();
        btnModificarProductos = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtReferenciaProducto = new javax.swing.JTextField();
        txtNombreProducto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboTallasProductos = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtPrecioProductos = new javax.swing.JTextField();
        txtColorProductos = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCantidadProductos = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cboCategoriaProductos = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstProductos = new javax.swing.JList<>();
        pnlVentasTab = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstProductosVentas = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstClientesVentas = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCantidadVenta = new javax.swing.JTextField();
        btnRealizarVenta = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstHistorialVentas = new javax.swing.JList<>();
        btnAnularFactura = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        btnComprasPorMes = new javax.swing.JButton();
        btnProductoMasVendido = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnReportes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReportesMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes", 0, 0, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.red)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel1.setText("Nombres");

        txtNombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreClienteKeyTyped(evt);
            }
        });

        txtApellidosCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosClienteKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel2.setText("Apellidos");

        txtCedulaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaClienteKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel3.setText("Cédula");

        txtTelefonoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoClienteKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel4.setText("Teléfono");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellidosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellidosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Acciones"));

        btnEliminarCliente.setText("Eliminar");
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        btnAgregarCliente.setText("Agregar");
        btnAgregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarClienteActionPerformed(evt);
            }
        });

        btnModificarCliente.setText("Modificar");
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 73, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarCliente)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAgregarCliente, btnEliminarCliente});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarCliente)
                    .addComponent(btnAgregarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAgregarCliente, btnEliminarCliente});

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Listado de Clientes", 0, 0, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.red)); // NOI18N

        lstClientes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstClientesMouseClicked(evt);
            }
        });
        lstClientes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstClientesValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstClientes);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlClientesTabLayout = new javax.swing.GroupLayout(pnlClientesTab);
        pnlClientesTab.setLayout(pnlClientesTabLayout);
        pnlClientesTabLayout.setHorizontalGroup(
            pnlClientesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClientesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClientesTabLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlClientesTabLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22))))
        );
        pnlClientesTabLayout.setVerticalGroup(
            pnlClientesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(pnlClientesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        btnReportes.addTab("Comercial", pnlClientesTab);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Acciones"));

        btnEliminarProductos.setText("Eliminar");
        btnEliminarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductosActionPerformed(evt);
            }
        });

        btnAgregarProductos.setText("Agregar");
        btnAgregarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductosActionPerformed(evt);
            }
        });

        btnModificarProductos.setText("Modificar");
        btnModificarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarProductosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregarProductos)
                .addGap(18, 18, 18)
                .addComponent(btnModificarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 73, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarProductos)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarProductos)
                    .addComponent(btnAgregarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAgregarProductos, btnEliminarProductos});

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Productos", 0, 0, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.red)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel5.setText("Referencia");

        txtReferenciaProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtReferenciaProductoKeyTyped(evt);
            }
        });

        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel6.setText("Nombre");

        jLabel7.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel7.setText("Talla");

        jLabel8.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel8.setText("Color");

        cboTallasProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "XS", "X", "M", "L", "XL", "XXL", "XXXL" }));

        jLabel13.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel13.setText("Precio");

        txtPrecioProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioProductosKeyTyped(evt);
            }
        });

        txtColorProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColorProductosKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel14.setText("Cantidad");

        txtCantidadProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadProductosKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel15.setText("Categoría");

        cboCategoriaProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blusas", "Camisas", "Camisetas", "Pantalón", "Zapatos" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(184, 184, 184))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtReferenciaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNombreProducto)
                                        .addComponent(cboTallasProductos, 0, 155, Short.MAX_VALUE)
                                        .addComponent(txtPrecioProductos)
                                        .addComponent(txtColorProductos)))))
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCantidadProductos)
                            .addComponent(cboCategoriaProductos, 0, 155, Short.MAX_VALUE))))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtReferenciaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cboCategoriaProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTallasProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtColorProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtPrecioProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtCantidadProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Listado de Productos", 0, 0, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.red)); // NOI18N

        lstProductos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstProductosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lstProductos);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlProductosTabLayout = new javax.swing.GroupLayout(pnlProductosTab);
        pnlProductosTab.setLayout(pnlProductosTabLayout);
        pnlProductosTabLayout.setHorizontalGroup(
            pnlProductosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProductosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProductosTabLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlProductosTabLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22))))
        );
        pnlProductosTabLayout.setVerticalGroup(
            pnlProductosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(pnlProductosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        btnReportes.addTab("Despacho", pnlProductosTab);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Realizar una venta", 0, 0, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.red)); // NOI18N

        lstProductosVentas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(lstProductosVentas);

        lstClientesVentas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstClientesVentas);

        jLabel9.setFont(new java.awt.Font("Noto Sans", 0, 15)); // NOI18N
        jLabel9.setText("Por favor seleccione un cliente");

        jLabel10.setFont(new java.awt.Font("Noto Sans", 0, 15)); // NOI18N
        jLabel10.setText("Por favor seleccione un producto");

        jLabel11.setFont(new java.awt.Font("Noto Sans", 0, 15)); // NOI18N
        jLabel11.setText("Cantidad deseada");

        txtCantidadVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadVentaKeyTyped(evt);
            }
        });

        btnRealizarVenta.setText("Realizar Venta");
        btnRealizarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRealizarVenta, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRealizarVenta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Historial de ventas", 0, 0, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.red)); // NOI18N

        lstHistorialVentas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(lstHistorialVentas);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
        );

        btnAnularFactura.setText("Anular factura");
        btnAnularFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularFacturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVentasTabLayout = new javax.swing.GroupLayout(pnlVentasTab);
        pnlVentasTab.setLayout(pnlVentasTabLayout);
        pnlVentasTabLayout.setHorizontalGroup(
            pnlVentasTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVentasTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVentasTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnularFactura)
                .addContainerGap(274, Short.MAX_VALUE))
        );
        pnlVentasTabLayout.setVerticalGroup(
            pnlVentasTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVentasTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVentasTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnularFactura))
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btnReportes.addTab("Facturación", pnlVentasTab);

        btnComprasPorMes.setText("Compras por mes");

        btnProductoMasVendido.setText("Producto más vendido");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnComprasPorMes, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnProductoMasVendido, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(873, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnComprasPorMes, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProductoMasVendido, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(578, Short.MAX_VALUE))
        );

        btnReportes.addTab("Reportes", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnReportes))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnReportes)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCantidadProductosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadProductosKeyTyped
        soloNumerosCajaDeTexto(evt, txtCantidadProductos, 5);
    }//GEN-LAST:event_txtCantidadProductosKeyTyped

    private void txtColorProductosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColorProductosKeyTyped
        limiteDeCaracteres(evt, txtColorProductos, 15);
    }//GEN-LAST:event_txtColorProductosKeyTyped

    private void txtPrecioProductosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioProductosKeyTyped
        soloNumerosCajaDeTexto(evt, txtPrecioProductos, 8);
    }//GEN-LAST:event_txtPrecioProductosKeyTyped

    private void txtNombreProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyTyped
        limiteDeCaracteres(evt, txtNombreProducto, 15);
    }//GEN-LAST:event_txtNombreProductoKeyTyped

    private void txtReferenciaProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReferenciaProductoKeyTyped
        soloNumerosCajaDeTexto(evt, txtReferenciaProducto, 5);
    }//GEN-LAST:event_txtReferenciaProductoKeyTyped

    private void btnAgregarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductosActionPerformed
        guardarInformacionProductos("insertar");
    }//GEN-LAST:event_btnAgregarProductosActionPerformed

    private void btnAgregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarClienteActionPerformed
        guardarInformacionClientes("insertar");
    }//GEN-LAST:event_btnAgregarClienteActionPerformed

    private void txtTelefonoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoClienteKeyTyped
        soloNumerosCajaDeTexto(evt, txtTelefonoCliente, 10);
    }//GEN-LAST:event_txtTelefonoClienteKeyTyped

    private void txtCedulaClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaClienteKeyTyped
        soloNumerosCajaDeTexto(evt, txtCedulaCliente, 10);
    }//GEN-LAST:event_txtCedulaClienteKeyTyped

    private void txtApellidosClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosClienteKeyTyped
        limiteDeCaracteres(evt, txtApellidosCliente, 18);
    }//GEN-LAST:event_txtApellidosClienteKeyTyped

    private void txtNombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreClienteKeyTyped
        limiteDeCaracteres(evt, txtNombreCliente, 18);
    }//GEN-LAST:event_txtNombreClienteKeyTyped

    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        //Se elimina del modelo el cliente que ha sido seleccionado.
        String[] datosCliente = extraerDatosSeleccionados(lstClientes.getSelectedValue());
        String clienteEliminar = datosCliente[0] + " " + datosCliente[1] + " - " +datosCliente[2];
        if (consultarEstadoParaEliminar(clienteEliminar, lstHistorialVentas)) {
            modeloClientes.remove(lstClientes.getSelectedIndex());
            gestionarArchivos.GuardarATexto("Archivos/clientes.txt", recorrerLista(lstClientes));
            limpiarDatosClientes();
        }else{
            JOptionPane.showMessageDialog(this, "El cliente se encuentra registrado en las facturas, no puede ser eliminado");
        }
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    private void btnEliminarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductosActionPerformed
        //Se elimina del modelo el cliente que ha sido seleccionado.
        String[] datosProducto = extraerDatosSeleccionados(lstProductos.getSelectedValue());
        String productoEliminar = datosProducto[0] + " - " + datosProducto[1] + " - " +datosProducto[2];
        if (consultarEstadoParaEliminar(productoEliminar, lstHistorialVentas)) {
        modeloProductos.remove(lstProductos.getSelectedIndex());
        gestionarArchivos.GuardarATexto("Archivos/productos.txt", recorrerLista(lstProductos));
        limpiarDatosProductos();
        } else{
            JOptionPane.showMessageDialog(this, "El producto se encuentra registrado en las facturas, no puede ser eliminado");
        }
    }//GEN-LAST:event_btnEliminarProductosActionPerformed

    private void txtCantidadVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadVentaKeyTyped
        soloNumerosCajaDeTexto(evt, txtCantidadVenta, 5);
    }//GEN-LAST:event_txtCantidadVentaKeyTyped

    private void btnRealizarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarVentaActionPerformed
        Calendar fecha = new GregorianCalendar();
        //Obtenemos el valor del año, mes, día,
        //hora, minuto y segundo del sistema
        //usando el método get y el parámetro correspondiente
        int año = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH);
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int hora = fecha.get(Calendar.HOUR_OF_DAY);
        int minuto = fecha.get(Calendar.MINUTE);
        String fechaVenta = año + "-" + mes + "-" + dia + "-" + hora + ":" + minuto;

        //Se guardan los valores seleccionados en las listas.
        String cliente = lstClientesVentas.getSelectedValue();
        String producto = lstProductosVentas.getSelectedValue();
        if (cliente != null && producto != null && !txtCantidadVenta.getText().isEmpty()) {
            //Se extraen los datos del cliente y del producto seleccionado
            String[] datosCliente = extraerDatosSeleccionados(cliente);
            String[] datosProducto = extraerDatosSeleccionados(producto);
            String nombreCliente = datosCliente[0];
            String apellidoCliente = datosCliente[1];
            String cedulaCliente = datosCliente[2];
            String nombreCategoria = datosProducto[0];
            int referencia = Integer.parseInt(datosProducto[1]);
            String nombreProducto = datosProducto[2];
            String talla = datosProducto[3];
            String color = datosProducto[4];
            double precio = Double.parseDouble(datosProducto[5]);
            //Se obtiene la cantidad disponible del producto seleccionado
            int cantidadDisponible = Integer.parseInt(datosProducto[6]);
            //Se obtiene la cantidad de un producto determinado que el cliente desea
            int cantidadSolicitada = Integer.parseInt(txtCantidadVenta.getText());
            //Se valida que haya existencia del producto para suplir lo que el cliente desea
            if (cantidadDisponible >= cantidadSolicitada) {
                //Se crea una cadena que contiene el producto con la cantidad modificada una vez se haga la venta.
                String productoModificado = datosProducto[0] + " - " + datosProducto[1] + " - " + datosProducto[2] + " - " + datosProducto[3] + " - " + datosProducto[4] + " - " + datosProducto[5] + " - " + (cantidadDisponible - cantidadSolicitada);
                //Se hace el cálculo del precio que pagará el cliente por el producto.
                double precioTotal = precio * cantidadSolicitada;
                //Se crea una instancia de la factura que se va a insertar 
                factura = new Factura(1, nombreCategoria, referencia, nombreProducto, precio, talla, color, cantidadDisponible, 1, cantidadSolicitada, precioTotal);
                //Se añade al modelo de ventas los datos que contendrá la factura
                modeloHistorialVentas.addElement(fechaVenta + " - " + factura.toString() + " -- " + nombreCliente + " " + apellidoCliente + " - " + cedulaCliente + " - " + "Vigente - Factura");
                //Se añade a la lista del historial de facturas la nueva factura.
                lstHistorialVentas.setModel(modeloHistorialVentas);
                //Se guarda en el archivo de facturas.txt la nueva factura.
                gestionarArchivos.GuardarATexto("Archivos/facturas.txt", recorrerLista(lstHistorialVentas));
                //Se actualiza el producto y la cantidad existente tanto en  la lista de productos como en la lista de ventas.
                lstProductos.setModel(gestionarArchivos.modificarLista("Archivos/productos.txt", producto, productoModificado));
                lstProductosVentas.setModel(gestionarArchivos.modificarLista("Archivos/productos.txt", producto, productoModificado));
                modeloProductos = (DefaultListModel) lstProductos.getModel();
                gestionarArchivos.GuardarATexto("Archivos/productos.txt", recorrerLista(lstProductos));
            } else {
                JOptionPane.showMessageDialog(this, "No hay cantidad suficiente para realizar la venta.");

            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un cliente y un producto y especifique una cantidad");
        }

    }//GEN-LAST:event_btnRealizarVentaActionPerformed

    private void lstClientesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstClientesValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lstClientesValueChanged

    private void lstClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstClientesMouseClicked
        //Se muestran los clientes en las cajas de texto cada que se seleccione un cliente en la lista.
        try {
            String[] datosClientes = extraerDatosSeleccionados(lstClientes.getSelectedValue());
            txtNombreCliente.setText(datosClientes[0]);
            txtApellidosCliente.setText(datosClientes[1]);
            txtCedulaCliente.setText(datosClientes[2]);
            txtTelefonoCliente.setText(datosClientes[3]);
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_lstClientesMouseClicked

    private void lstProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstProductosMouseClicked
        //Se muestran los productos en las cajas de texto cada que se seleccione un producto en la lista.

        try {
            String[] datosProductos = extraerDatosSeleccionados(lstProductos.getSelectedValue());
            cboCategoriaProductos.setSelectedItem(datosProductos[0]);
            txtReferenciaProducto.setText(datosProductos[1]);
            txtNombreProducto.setText(datosProductos[2]);
            cboTallasProductos.setSelectedItem(datosProductos[3]);
            txtColorProductos.setText(datosProductos[4]);
            txtPrecioProductos.setText(datosProductos[5]);
            txtCantidadProductos.setText(datosProductos[6]);
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_lstProductosMouseClicked

    private void btnModificarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarProductosActionPerformed
        guardarInformacionProductos("modificar");

    }//GEN-LAST:event_btnModificarProductosActionPerformed

    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        guardarInformacionClientes("modificar");
    }//GEN-LAST:event_btnModificarClienteActionPerformed

    private void btnAnularFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularFacturaActionPerformed
        //Se obtiene la factura seleccionada.
        String facturaSeleccionada = lstHistorialVentas.getSelectedValue();
        if (facturaSeleccionada != null) {
            if (JOptionPane.showConfirmDialog(this,
                    "Está seguro de que desea anular la factura\n " + facturaSeleccionada + "?", "Anular factura?",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                String[] datosFactura = extraerDatosSeleccionados(facturaSeleccionada);
                if ("Vigente".equals(datosFactura[11])) {
                    //Se reemplaza el estado de la factura seleccionada a el valor Anulada
                    String nuevaFactura = facturaSeleccionada.replace("Vigente", "Anulada").replace("Factura", "Nota Crédito");
                   
                    //Se modifican los cambios en la lista de facturas
                    lstHistorialVentas.setModel(gestionarArchivos.modificarLista("Archivos/facturas.txt", lstHistorialVentas.getSelectedValue(), nuevaFactura));
                    //Se actualiza la lista de facturas.
                    modeloHistorialVentas = (DefaultListModel) lstHistorialVentas.getModel();
                    //Se guarda en el archivo facturas.txt el nuevo estado de la factura
                    gestionarArchivos.GuardarATexto("Archivos/facturas.txt", recorrerLista(lstHistorialVentas));

                } else {
                    JOptionPane.showMessageDialog(this, "La factura seleccionada ya ha sido anulada.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione una factura.");

        }
    }//GEN-LAST:event_btnAnularFacturaActionPerformed

    private void btnReportesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnReportesMouseClicked

    public boolean consultarEstadoParaEliminar(String datoAEliminar, JList lista) {
        for (int i = 0; i < lista.getModel().getSize(); i++) {
            if (lista.getModel().getElementAt(i).toString().contains(datoAEliminar)) {
                return false;
            }
        }
        return true;
    }

    /**
     * Método encargado de guardar toda la información en las cajas de texto de
     * los clientes y dependiendo si dan clic al botón insertar o modificar
     * realiza una acción diferente y guarda en el archivo.
     */
    public void guardarInformacionClientes(String accion) {
        //Se guarda la información de los clientes suministrada en las cajas de texto.
        String nombreCliente = txtNombreCliente.getText();
        String apellidoCliente = txtApellidosCliente.getText();
        String cedulaCliente = txtCedulaCliente.getText().trim();
        String telefonoCliente = txtTelefonoCliente.getText().trim();
        //Se guardan todos los datos en un arrayList con el fin de validar los datos posteriormente.
        datos = new ArrayList<>();
        datos.add(nombreCliente);
        datos.add(apellidoCliente);
        datos.add(cedulaCliente);
        datos.add(telefonoCliente);
        if (validarDatosVacios(datos)) {
            clientes = new Clientes(nombreCliente, apellidoCliente, Integer.parseInt(cedulaCliente), Integer.parseInt(telefonoCliente));
            //Si el cliente da clic en el botón modificar
            if (accion.equals("modificar")) {
            
                lstClientes.setModel(gestionarArchivos.modificarLista("Archivos/clientes.txt", lstClientes.getSelectedValue().replace("\n", ""), clientes.toString()));
                lstClientesVentas.setModel(gestionarArchivos.modificarLista("Archivos/clientes.txt", lstClientes.getSelectedValue(), clientes.toString()));
                modeloClientes = (DefaultListModel) lstClientes.getModel();
                lstClientesVentas.setModel(modeloClientes);
            } //Si el cliente da clic en el botón insertar
            else if (accion.equals("insertar")) {
                modeloClientes.addElement(clientes.toString());
                lstClientes.setModel(modeloClientes);
                lstClientesVentas.setModel(modeloClientes);
            }
            //Se guarda el cliente en el archivo de texto clientes.txt
            gestionarArchivos.GuardarATexto("Archivos/clientes.txt", recorrerLista(lstClientes));
            limpiarDatosClientes();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor rellene todos los campos, no deben existir campos vacíos");
        }

    }

    /**
     * Método encargado de guardar toda la información en las cajas de texto de
     * los productos y dependiendo si dan clic al botón insertar o modificar
     * realiza una acción diferente y guarda en el archivo.
     */
    public void guardarInformacionProductos(String accion) {
        //Se guarda la información de los productos suministrada en las cajas de texto.
        String nombreCategoria = cboCategoriaProductos.getSelectedItem().toString();
        int referencia = Integer.parseInt(txtReferenciaProducto.getText().trim());
        String nombreProducto = txtNombreProducto.getText();
        double precio = Double.parseDouble(txtPrecioProductos.getText().trim());
        String talla = cboTallasProductos.getSelectedItem().toString();
        String color = txtColorProductos.getText();
        int cantidadDisponible = Integer.parseInt(txtCantidadProductos.getText().trim());
        //Se guardan todos los datos en un arrayList con el fin de validar los datos posteriormente.
        datos = new ArrayList<>();
        datos.add(nombreCategoria);
        datos.add(referencia);
        datos.add(nombreProducto);
        datos.add(precio);
        datos.add(talla);
        datos.add(color);
        datos.add(cantidadDisponible);
        //Se valida que los datos no estén vacíos
        if (validarDatosVacios(datos)) {
            //Se crea el producto
            productos = new Productos(1, nombreCategoria, referencia, nombreProducto, precio, talla, color, cantidadDisponible);
            //Si dan clic en el botón modificar
            if (accion.equals("modificar")) {
                System.out.println("Nuevo: " + productos.toString() + "\n Viejo: " + lstProductos.getSelectedValue());
                lstProductos.setModel(gestionarArchivos.modificarLista("Archivos/productos.txt", lstProductos.getSelectedValue().replace("\n", ""), productos.toString()));
                lstProductosVentas.setModel(gestionarArchivos.modificarLista("Archivos/productos.txt", lstProductos.getSelectedValue(), productos.toString()));
                modeloProductos = (DefaultListModel) lstProductos.getModel();
                lstProductosVentas.setModel(modeloProductos);
            }//Si dan clic en el botón insertar 
            else if (accion.equals("insertar")) {
                modeloProductos.addElement(productos.toString());
                lstProductos.setModel(modeloProductos);
                lstProductosVentas.setModel(modeloProductos);
            }
            //Se guarda el producto en productos.txt
            gestionarArchivos.GuardarATexto("Archivos/productos.txt", recorrerLista(lstProductos));
            limpiarDatosProductos();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor rellene todos los campos, no deben existir campos vacíos");
        }
    }

    /**
     * Método encargado de devolver un vector con los datos que se seleccionen
     * en el JList correspondiente.
     *
     * @param producto
     * @return
     */
    public String[] extraerDatosSeleccionados(String producto) {

        String[] datosProducto = producto.split(" - ");
        return datosProducto;
    }

    /**
     * Método encargado de validar que no existan datos vacíos, entra por
     * parámetro una lista que contiene todos los datos a validar.
     *
     * @param datos
     * @return
     */
    public boolean validarDatosVacios(ArrayList<Object> datos) {
        for (int i = 0; i < datos.size(); i++) {
            if (datos.get(i).toString().isEmpty()) {
                return false;
            }
        }
        return true;

    }

    /**
     * Método encargado de recorrer un JList y devolverlo como un arraylist.
     *
     * @param lista
     * @return
     */
    public String recorrerLista(JList lista) {
        String datosLista = "";
        for (int i = 0; i < lista.getModel().getSize(); i++) {

            datosLista += lista.getModel().getElementAt(i).toString() + "\n";

        }
        return datosLista;

    }

    /**
     * Método que solo admite números, Entra como parámetro un evento, que es
     * cuando se presiona una tecla y una caja de texto, la cual es la evaluada.
     *
     * @param evt
     * @param txtNumero
     * @param cantidadDeCaracteres
     */
    public void soloNumerosCajaDeTexto(java.awt.event.KeyEvent evt, JTextField txtNumero, int cantidadDeCaracteres) {
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            txtNumero.setText("");
            evt.consume();
            JOptionPane.showMessageDialog(null, "Por favor ingrese solamente números, sin puntuación o letras", "Validando datos", JOptionPane.ERROR_MESSAGE);

        }
        limiteDeCaracteres(evt, txtNumero, cantidadDeCaracteres);

    }

    /**
     * Método que solo admite una longitud máxima de n caracteres, Entra como
     * parámetro un evento, que es cuando se presiona una tecla y una caja de
     * texto, la cual es la evaluada.
     *
     * @param evt
     * @param txt
     * @param cantidadDeCaracteres
     */
    public void limiteDeCaracteres(java.awt.event.KeyEvent evt, JTextField txt, int cantidadDeCaracteres) {
        int k = (int) evt.getKeyChar();
        if (txt.getText().length() >= cantidadDeCaracteres) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            txt.setText("");
            JOptionPane.showMessageDialog(null, "Ha excedido el número máximo de caracteres! (" + cantidadDeCaracteres + ")", "Validando Datos", JOptionPane.ERROR_MESSAGE);
            txt.setText("");
        }
    }

    /**
     * Método encargar de limpiar las cajas de texto cuando se hace una
     * insersión en los clientes.
     */
    public void limpiarDatosClientes() {
        txtNombreCliente.setText("");
        txtApellidosCliente.setText("");
        txtCedulaCliente.setText("");
        txtTelefonoCliente.setText((""));
    }

    /**
     * Método encargar de limpiar las cajas de texto cuando se hace una
     * insersión en los productos.
     */
    public void limpiarDatosProductos() {
        txtReferenciaProducto.setText("");
        txtNombreProducto.setText("");
        txtColorProductos.setText("");
        txtPrecioProductos.setText((""));
        txtCantidadProductos.setText((""));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacturarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacturarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacturarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacturarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FacturarPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCliente;
    private javax.swing.JButton btnAgregarProductos;
    private javax.swing.JButton btnAnularFactura;
    private javax.swing.JButton btnComprasPorMes;
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnEliminarProductos;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnModificarProductos;
    private javax.swing.JButton btnProductoMasVendido;
    private javax.swing.JButton btnRealizarVenta;
    private javax.swing.JTabbedPane btnReportes;
    private javax.swing.JComboBox<String> cboCategoriaProductos;
    private javax.swing.JComboBox<String> cboTallasProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> lstClientes;
    private javax.swing.JList<String> lstClientesVentas;
    private javax.swing.JList<String> lstHistorialVentas;
    private javax.swing.JList<String> lstProductos;
    private javax.swing.JList<String> lstProductosVentas;
    private javax.swing.JPanel pnlClientesTab;
    private javax.swing.JPanel pnlProductosTab;
    private javax.swing.JPanel pnlVentasTab;
    private javax.swing.JTextField txtApellidosCliente;
    private javax.swing.JTextField txtCantidadProductos;
    private javax.swing.JTextField txtCantidadVenta;
    private javax.swing.JTextField txtCedulaCliente;
    private javax.swing.JTextField txtColorProductos;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecioProductos;
    private javax.swing.JTextField txtReferenciaProducto;
    private javax.swing.JTextField txtTelefonoCliente;
    // End of variables declaration//GEN-END:variables
}
